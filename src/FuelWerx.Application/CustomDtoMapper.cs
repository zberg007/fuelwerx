using Abp.Authorization.Users;
using Abp.Domain.Entities;
using AutoMapper;
using FuelWerx.Authorization.Users;
using FuelWerx.Authorization.Users.Dto;
using FuelWerx.Configuration.Tenants.Dto;
using FuelWerx.Estimates;
using FuelWerx.Estimates.Dto;
using FuelWerx.Invoices;
using FuelWerx.Invoices.Dto;
using FuelWerx.Projects;
using FuelWerx.Projects.Dto;
using FuelWerx.Tenants;
using System;
using System.Linq.Expressions;
using System.Runtime.CompilerServices;

namespace FuelWerx
{
	internal static class CustomDtoMapper
	{
		private static volatile bool _mappedBefore;

		private readonly static object SyncObj;

		static CustomDtoMapper()
		{
			CustomDtoMapper.SyncObj = new object();
		}

		public static void CreateMappings()
		{
			lock (CustomDtoMapper.SyncObj)
			{
				if (!CustomDtoMapper._mappedBefore)
				{
					CustomDtoMapper.CreateMappingsInternal();
					CustomDtoMapper._mappedBefore = true;
				}
			}
		}

		private static void CreateMappingsInternal()
		{
			Mapper.CreateMap<User, UserEditDto>().ForMember((UserEditDto dto) => dto.Password, (IMemberConfigurationExpression<User> options) => options.Ignore()).ReverseMap().ForMember((User user) => user.Password, (IMemberConfigurationExpression<UserEditDto> options) => options.Ignore());
			Mapper.CreateMap<CreateOrUpdateEstimateInput, Estimate>().ForMember((Estimate d) => d.CurrentStatus, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.CurrentStatus)).ForMember((Estimate d) => (object)d.CustomerId, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<long?>((CreateOrUpdateEstimateInput s) => s.Estimate.CustomerId)).ForMember((Estimate d) => (object)d.Date, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<DateTime?>((CreateOrUpdateEstimateInput s) => s.Estimate.Date)).ForMember((Estimate d) => d.Description, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Description)).ForMember((Estimate d) => (object)d.Discount, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Discount)).ForMember((Estimate d) => (object)d.Hours, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Hours)).ForMember((Estimate d) => (object)d.IsActive, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<bool>((CreateOrUpdateEstimateInput s) => s.Estimate.IsActive)).ForMember((Estimate d) => d.Label, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Label)).ForMember((Estimate d) => (object)d.LineTotal, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.LineTotal)).ForMember((Estimate d) => (object)d.LogDataAndTasksVisibleToCustomer, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<bool?>((CreateOrUpdateEstimateInput s) => s.Estimate.LogDataAndTasksVisibleToCustomer)).ForMember((Estimate d) => d.Number, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Number)).ForMember((Estimate d) => d.PONumber, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.PONumber)).ForMember((Estimate d) => (object)d.Rate, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Rate)).ForMember((Estimate d) => d.Tasks, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => d.Products, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => d.AdhocProducts, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => d.Adjustments, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => (object)d.Tax, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Tax)).ForMember((Estimate d) => d.Terms, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Terms)).ForMember((Estimate d) => d.TimeEntryLog, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.TimeEntryLog)).ForMember((Estimate d) => (object)d.Id, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<long?>((CreateOrUpdateEstimateInput s) => s.Estimate.Id));
			Mapper.CreateMap<CreateOrUpdateEstimateInput, Estimate>().ForMember((Estimate d) => d.CurrentStatus, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.CurrentStatus)).ForMember((Estimate d) => (object)d.CustomerId, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<long?>((CreateOrUpdateEstimateInput s) => s.Estimate.CustomerId)).ForMember((Estimate d) => (object)d.Date, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<DateTime?>((CreateOrUpdateEstimateInput s) => s.Estimate.Date)).ForMember((Estimate d) => d.Description, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Description)).ForMember((Estimate d) => (object)d.Discount, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Discount)).ForMember((Estimate d) => (object)d.Hours, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Hours)).ForMember((Estimate d) => (object)d.IsActive, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<bool>((CreateOrUpdateEstimateInput s) => s.Estimate.IsActive)).ForMember((Estimate d) => d.Label, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Label)).ForMember((Estimate d) => (object)d.LineTotal, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.LineTotal)).ForMember((Estimate d) => (object)d.LogDataAndTasksVisibleToCustomer, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<bool?>((CreateOrUpdateEstimateInput s) => s.Estimate.LogDataAndTasksVisibleToCustomer)).ForMember((Estimate d) => d.Number, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Number)).ForMember((Estimate d) => d.PONumber, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.PONumber)).ForMember((Estimate d) => (object)d.Rate, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Rate)).ForMember((Estimate d) => d.Tasks, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => d.Products, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => d.AdhocProducts, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => d.Adjustments, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.Ignore()).ForMember((Estimate d) => (object)d.Tax, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateEstimateInput s) => s.Estimate.Tax)).ForMember((Estimate d) => d.Terms, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.Terms)).ForMember((Estimate d) => d.TimeEntryLog, (IMemberConfigurationExpression<CreateOrUpdateEstimateInput> opt) => opt.MapFrom<string>((CreateOrUpdateEstimateInput s) => s.Estimate.TimeEntryLog));
			Mapper.CreateMap<CreateOrUpdateProjectInput, Project>().ForMember((Project d) => d.CurrentStatus, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.CurrentStatus)).ForMember((Project d) => (object)d.CustomerId, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<long?>((CreateOrUpdateProjectInput s) => s.Project.CustomerId)).ForMember((Project d) => (object)d.Date, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<DateTime?>((CreateOrUpdateProjectInput s) => s.Project.Date)).ForMember((Project d) => d.Description, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Description)).ForMember((Project d) => (object)d.Discount, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Discount)).ForMember((Project d) => (object)d.Hours, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Hours)).ForMember((Project d) => (object)d.IsActive, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<bool>((CreateOrUpdateProjectInput s) => s.Project.IsActive)).ForMember((Project d) => d.Label, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Label)).ForMember((Project d) => (object)d.LineTotal, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.LineTotal)).ForMember((Project d) => (object)d.LogDataAndTasksVisibleToCustomer, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<bool?>((CreateOrUpdateProjectInput s) => s.Project.LogDataAndTasksVisibleToCustomer)).ForMember((Project d) => d.Number, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Number)).ForMember((Project d) => d.PONumber, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.PONumber)).ForMember((Project d) => (object)d.Rate, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Rate)).ForMember((Project d) => d.Tasks, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.Ignore()).ForMember((Project d) => (object)d.Tax, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Tax)).ForMember((Project d) => d.Terms, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Terms)).ForMember((Project d) => d.TimeEntryLog, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.TimeEntryLog)).ForMember((Project d) => (object)d.Id, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<long?>((CreateOrUpdateProjectInput s) => s.Project.Id));
			Mapper.CreateMap<CreateOrUpdateProjectInput, Project>().ForMember((Project d) => d.CurrentStatus, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.CurrentStatus)).ForMember((Project d) => (object)d.CustomerId, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<long?>((CreateOrUpdateProjectInput s) => s.Project.CustomerId)).ForMember((Project d) => (object)d.Date, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<DateTime?>((CreateOrUpdateProjectInput s) => s.Project.Date)).ForMember((Project d) => d.Description, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Description)).ForMember((Project d) => (object)d.Discount, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Discount)).ForMember((Project d) => (object)d.Hours, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Hours)).ForMember((Project d) => (object)d.IsActive, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<bool>((CreateOrUpdateProjectInput s) => s.Project.IsActive)).ForMember((Project d) => d.Label, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Label)).ForMember((Project d) => (object)d.LineTotal, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.LineTotal)).ForMember((Project d) => (object)d.LogDataAndTasksVisibleToCustomer, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<bool?>((CreateOrUpdateProjectInput s) => s.Project.LogDataAndTasksVisibleToCustomer)).ForMember((Project d) => d.Number, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Number)).ForMember((Project d) => d.PONumber, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.PONumber)).ForMember((Project d) => (object)d.Rate, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Rate)).ForMember((Project d) => d.Tasks, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.Ignore()).ForMember((Project d) => (object)d.Tax, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateProjectInput s) => s.Project.Tax)).ForMember((Project d) => d.Terms, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.Terms)).ForMember((Project d) => d.TimeEntryLog, (IMemberConfigurationExpression<CreateOrUpdateProjectInput> opt) => opt.MapFrom<string>((CreateOrUpdateProjectInput s) => s.Project.TimeEntryLog));
			Mapper.CreateMap<CreateOrUpdateInvoiceInput, Invoice>().ForMember((Invoice d) => d.CurrentStatus, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.CurrentStatus)).ForMember((Invoice d) => (object)d.CustomerId, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<long?>((CreateOrUpdateInvoiceInput s) => s.Invoice.CustomerId)).ForMember((Invoice d) => (object)d.Date, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<DateTime?>((CreateOrUpdateInvoiceInput s) => s.Invoice.Date)).ForMember((Invoice d) => d.Description, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.Description)).ForMember((Invoice d) => (object)d.Discount, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Discount)).ForMember((Invoice d) => (object)d.Hours, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Hours)).ForMember((Invoice d) => (object)d.IsActive, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<bool>((CreateOrUpdateInvoiceInput s) => s.Invoice.IsActive)).ForMember((Invoice d) => (object)d.LineTotal, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.LineTotal)).ForMember((Invoice d) => (object)d.LogDataAndTasksVisibleToCustomer, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<bool?>((CreateOrUpdateInvoiceInput s) => s.Invoice.LogDataAndTasksVisibleToCustomer)).ForMember((Invoice d) => d.Number, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.Number)).ForMember((Invoice d) => d.PONumber, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.PONumber)).ForMember((Invoice d) => (object)d.Rate, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Rate)).ForMember((Invoice d) => d.Tasks, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.Ignore()).ForMember((Invoice d) => (object)d.Tax, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Tax)).ForMember((Invoice d) => d.Terms, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.Terms)).ForMember((Invoice d) => d.TimeEntryLog, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.TimeEntryLog)).ForMember((Invoice d) => (object)d.Id, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<long?>((CreateOrUpdateInvoiceInput s) => s.Invoice.Id));
			Mapper.CreateMap<CreateOrUpdateInvoiceInput, Invoice>().ForMember((Invoice d) => d.CurrentStatus, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.CurrentStatus)).ForMember((Invoice d) => (object)d.CustomerId, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<long?>((CreateOrUpdateInvoiceInput s) => s.Invoice.CustomerId)).ForMember((Invoice d) => (object)d.Date, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<DateTime?>((CreateOrUpdateInvoiceInput s) => s.Invoice.Date)).ForMember((Invoice d) => d.Description, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.Description)).ForMember((Invoice d) => (object)d.Discount, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Discount)).ForMember((Invoice d) => (object)d.Hours, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Hours)).ForMember((Invoice d) => (object)d.IsActive, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<bool>((CreateOrUpdateInvoiceInput s) => s.Invoice.IsActive)).ForMember((Invoice d) => (object)d.LineTotal, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.LineTotal)).ForMember((Invoice d) => (object)d.LogDataAndTasksVisibleToCustomer, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<bool?>((CreateOrUpdateInvoiceInput s) => s.Invoice.LogDataAndTasksVisibleToCustomer)).ForMember((Invoice d) => d.Number, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.Number)).ForMember((Invoice d) => d.PONumber, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.PONumber)).ForMember((Invoice d) => (object)d.Rate, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Rate)).ForMember((Invoice d) => d.Tasks, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.Ignore()).ForMember((Invoice d) => (object)d.Tax, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<decimal>((CreateOrUpdateInvoiceInput s) => s.Invoice.Tax)).ForMember((Invoice d) => d.Terms, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.Terms)).ForMember((Invoice d) => d.TimeEntryLog, (IMemberConfigurationExpression<CreateOrUpdateInvoiceInput> opt) => opt.MapFrom<string>((CreateOrUpdateInvoiceInput s) => s.Invoice.TimeEntryLog));
			Mapper.CreateMap<TenantDetailEditDto, TenantDetail>();
			Mapper.CreateMap<TenantCustomerServiceEditDto, TenantCustomerService>();
			Mapper.CreateMap<TenantHoursEditDto, TenantHour>();
			Mapper.CreateMap<TenantNotificationsEditDto, TenantNotifications>();
			Mapper.CreateMap<TenantPaymentSettingsEditDto, TenantPaymentSettings>();
			Mapper.CreateMap<TenantPaymentGatewaySettingsEditDto, TenantPaymentGatewaySettings>();
			Mapper.CreateMap<TenantDateTimeSettingsEditDto, TenantDateTimeSettings>();
			Mapper.CreateMap<EstimateProductLineItemOptionDto, EstimateProductLineItemOption>();
			Mapper.CreateMap<EstimateProductLineItemOption, EstimateProductLineItemOptionDto>();
			Mapper.CreateMap<ProjectProductLineItemOptionDto, ProjectProductLineItemOption>();
			Mapper.CreateMap<ProjectProductLineItemOption, ProjectProductLineItemOptionDto>();
		}
	}
}